{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abhir\\\\Desktop\\\\AI_DDOS\\\\frontend\\\\src\\\\components\\\\LogsList.js\";\nimport React, { useEffect, useState } from \"react\";\nconst LogsList = () => {\n  const [logs, setLogs] = useState([]);\n  useEffect(() => {\n    fetch(\"/api/logs\").then(res => res.json()).then(data => setLogs(data)).catch(err => console.error(\"Error fetching logs:\", err));\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-2xl font-bold mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, \" Website Logs\"), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"w-full border-collapse border border-gray-400\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"bg-gray-200\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    className: \"border p-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, \"Timestamp\"), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"border p-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, \"Source IP\"), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"border p-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, \"HTTP Code\"), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"border p-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, \"SQL Injection\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, logs.map((log, index) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: index,\n    className: \"border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: \"border p-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 15\n    }\n  }, new Date(log.timestamp).toLocaleString()), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"border p-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 15\n    }\n  }, log.sourceIP), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"border p-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 15\n    }\n  }, log.httpCode), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"border p-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 15\n    }\n  }, log.sqlInjectionAttempt ? \" Yes\" : \" No\"))))));\n};\nexport default LogsList;","map":{"version":3,"names":["React","useEffect","useState","LogsList","logs","setLogs","fetch","then","res","json","data","catch","err","console","error","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","log","index","key","Date","timestamp","toLocaleString","sourceIP","httpCode","sqlInjectionAttempt"],"sources":["C:/Users/abhir/Desktop/AI_DDOS/frontend/src/components/LogsList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nconst LogsList = () => {\r\n  const [logs, setLogs] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"/api/logs\")\r\n      .then(res => res.json())\r\n      .then(data => setLogs(data))\r\n      .catch(err => console.error(\"Error fetching logs:\", err));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"p-5\">\r\n      <h2 className=\"text-2xl font-bold mb-3\"> Website Logs</h2>\r\n      <table className=\"w-full border-collapse border border-gray-400\">\r\n        <thead>\r\n          <tr className=\"bg-gray-200\">\r\n            <th className=\"border p-2\">Timestamp</th>\r\n            <th className=\"border p-2\">Source IP</th>\r\n            <th className=\"border p-2\">HTTP Code</th>\r\n            <th className=\"border p-2\">SQL Injection</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {logs.map((log, index) => (\r\n            <tr key={index} className=\"border\">\r\n              <td className=\"border p-2\">{new Date(log.timestamp).toLocaleString()}</td>\r\n              <td className=\"border p-2\">{log.sourceIP}</td>\r\n              <td className=\"border p-2\">{log.httpCode}</td>\r\n              <td className=\"border p-2\">{log.sqlInjectionAttempt ? \" Yes\" : \" No\"}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LogsList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}